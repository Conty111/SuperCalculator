version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    env_file:
      - enviroments/kafka.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - zookeeper

  agent:
    image: svc-agent
    build:
      context: ./
      dockerfile: DockerfileAgent
    container_name: agent
    depends_on:
      - kafka
    environment:
      AGENTS_COUNT: ${AGENTS_COUNT}
    env_file:
      - enviroments/agent.env
      - enviroments/kafka.env
      - enviroments/.env
    entrypoint: "yes"
#    command: "serve 0"

  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./data:/var/lib/postgresql/data

  orkestrator:
    image: svc-orkestrator
    build:
      context: ./
      dockerfile: DockerfileOrkestrator
    container_name: orkestrator
    depends_on:
      - kafka
      - db
    environment:
      DB_USER: postgres
      AGENTS_COUNT: ${AGENTS_COUNT}
    env_file:
      - enviroments/orkestrator.env
      - enviroments/kafka.env
      - enviroments/.env
      - enviroments/docker.db.env
    ports:
      - "8000:8000"
    entrypoint: "/app"
    command: "serve"
