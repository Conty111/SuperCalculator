# build stage
FROM golang:1.22 as builder

RUN mkdir /src
WORKDIR /src

COPY ./back-end/models ./back-end/models
COPY ./back-end/orkestrator ./back-end/orkestrator
COPY ./back-end/proto ./back-end/proto
COPY ./system_config_docker.json system_config.json
COPY go.mod .
COPY go.sum .
COPY Makefile .

RUN mkdir enviroments
COPY ./enviroments/docker.db.env ./enviroments/db.env
COPY ./enviroments/.env ./enviroments/.env
COPY ./enviroments/kafka.env ./enviroments/kafka.env
COPY ./enviroments/orkestrator.env ./enviroments/orkestrator.env

RUN make build-orkestrator

# production stage
FROM alpine:latest

#COPY --from=builder /src/.env .
#COPY --from=builder /src/kafka.env .
#COPY --from=builder /src/orkestrator.env .
COPY --from=builder /src/orkestrator_app app
COPY --from=builder /src/system_config.json .
COPY --from=builder /src/enviroments ./enviroments

RUN apk update && apk upgrade && apk --no-cache add ca-certificates wget
RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
RUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-2.34-r0.apk
RUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-bin-2.34-r0.apk
RUN apk add glibc-2.34-r0.apk || true
RUN apk add glibc-bin-2.34-r0.apk || true
RUN rm glibc*

RUN chmod +x app
